name: Publish teztnets

on:
  push:
    tags:
      - "v*"
  schedule:
    # update the deployment every Monday at 0:00 UTC
    - cron: "0 0 * * *"

jobs:
  up:
    name: up
    runs-on: ubuntu-latest
    outputs:
      networks: ${{ steps.pup.outputs.networks }}
      teztnets: ${{ steps.pup.outputs.teztnets }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: tempKubernetesAdmin

      - name: Add profile credentials to ~/.aws/credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile oxheadalpha
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile oxheadalpha

      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
        with:
          pulumi-version: 3.32.1
      - run: npm install

      - uses: pulumi/actions@v3
        id: pup
        with:
          command: up
          stack-name: tqtezos/teztnets/teztnets
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  build:
    needs: up
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: install pip pkgs
        run: |
          pip install PyYAML jinja2
      - run: |
          cat > networks.json <<EOF
          ${{ needs.up.outputs.networks }}
          EOF
      - run: |
          cat > teztnets.json <<EOF
          ${{ needs.up.outputs.teztnets }}
          EOF
      - name: generate release artifacts
        run: |
          python src/release.py
        env:
          FAUCET_RECAPTCHA_SITE_KEY: ${{secrets.FAUCET_RECAPTCHA_SITE_KEY }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/teztnets.json
          body_path: target/release-notes.markdown
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/release
          enable_jekyll: true
